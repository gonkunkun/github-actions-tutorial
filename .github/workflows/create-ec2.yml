name: terraform-test

on:
  push:
    branches:
     - "main"
  pull_request:
    types: [opened]

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
    # Go環境のセットアップ
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
       terraform_version: 0.14.9
    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: check val
      run: echo ${{github.event_name}}

    - name: check val
      run: echo ${{github.ref}}

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color

    - uses: actions/github-script@v3
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = '#### Terraform Validation \`${{ steps.validate.outcome }}\`
          #### Terraform Plan \`${{ steps.plan.outcome }}`\'
          <details><summary>Show Plan</summary>
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\
          <details>`;
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
# test